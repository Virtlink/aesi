apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'org.jetbrains.dokka'

group 'com.virtlink'
version '0.0.1-SNAPSHOT'

sourceCompatibility = javaVersion
targetCompatibility = javaVersion

tasks.withType(JavaCompile) { options.encoding = 'UTF-8' }

idea {
    module {
        generatedSourceDirs += file('src/main/gen')
    }
}

sourceSets {
    main {
        java.srcDirs += 'src/main/gen'
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    compile     "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"

    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"
    testCompile 'junit:junit:4.11'
}

dokka {
    outputFormat = 'jekyll'
    outputDirectory = "$projectDir/../docs/"

    // linkMapping {
    //     dir = "src/main/kotlin"
    //     url = "https://github.com/Virtlink/aesi/tree/master/aesi-intellij/src/main/kotlin"
    //     suffix = "#L"
    // }

    // externalDocumentationLink {
    //     url = new URL("https://virtlink.com/aesi/aesi-java/")
    //     packageListUrl = new URL("https://raw.githubusercontent.com/Virtlink/aesi/master/docs/aesi-java/package-list")
    // }
}

compileKotlin {
    kotlinOptions.jvmTarget = "$javaVersion"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "$javaVersion"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

test {
    testLogging {
        exceptionFormat = 'full'
    }
}
