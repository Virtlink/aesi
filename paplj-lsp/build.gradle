// Standalone build

buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_version"
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'kotlin'
    apply plugin: 'idea'
    apply plugin: 'maven'
    apply plugin: 'org.jetbrains.dokka'

    group 'com.virtlink'
    version '0.0.1-SNAPSHOT'

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url 'https://jitpack.io' }
    }

    dependencies {
        compile     "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

        testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
        testCompile "junit:junit:$junit_version"
    }

    tasks.withType(JavaCompile) { options.encoding = 'UTF-8' }

    dokka {
        outputFormat = 'jekyll'
        outputDirectory = "$projectDir/../docs/"

        linkMapping {
            dir = "src/main/kotlin"
            url = "https://github.com/Virtlink/aesi/tree/master/$project.name/src/main/kotlin"
            suffix = "#L"
        }

        externalDocumentationLink {
            url = new URL("https://virtlink.com/aesi/$project.name/")
            packageListUrl = new URL("https://raw.githubusercontent.com/Virtlink/aesi/master/docs/$project.name/package-list")
        }
    }

    compileKotlin {
        kotlinOptions.jvmTarget = java_version
    }

    compileTestKotlin {
        kotlinOptions.jvmTarget = java_version
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
        outputFormat = 'javadoc'
        outputDirectory = "$buildDir/javadoc"
    }

    task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
        classifier = 'javadoc'
        from dokkaJavadoc.outputDirectory
    }

    idea {
        module {
            generatedSourceDirs += file('src/main/gen')
        }
    }

    sourceSets {
        main {
            java.srcDirs += 'src/main/gen'
        }
    }

    artifacts {
        archives sourcesJar
    //    archives javadocJar
    }

    test {
        testLogging {
            exceptionFormat = 'full'
        }
    }
}


apply plugin: 'application'
mainClassName = 'com.virtlink.paplj.lsp.ProgramKt'
defaultTasks 'run'

dependencies {
    compile project(":paplj")
    compile project(":aesi-lsp")

    compile "com.google.inject:guice:$guice_version"
    compile "com.google.inject.extensions:guice-assistedinject:$guice_version"
    compile "com.google.inject.extensions:guice-multibindings:$guice_version"
}

