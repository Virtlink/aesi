
buildscript {
    file("../releng/shared.properties").withInputStream { stream ->
        def userProps = new Properties()
        userProps.load(stream)
        userProps.each { key, val ->
            if (!project.hasProperty(key)) {
                    project.ext.set(key, val);
            }
        }
    }
    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_version"
    }
}

plugins {
    id 'org.dm.bundle' version '0.10.0'
}

apply from: "../releng/shared.gradle"

dependencies {
    compile project(":paplj")
}

bundle {
    instructions << [
        'Bundle-SymbolicName': "$project.name",
        'Bundle-Name': "$project.name",
        'Bundle-Version': "${project.version.replace("-SNAPSHOT", ".qualifier")}",
        'Export-Package': '*;provider=metaborg;mandatory:=provider',
        'Import-Package': '!*',
        '_nouses': 'true',
        '_nodefaultversion': 'true',
        'Eclipse-BuddyPolicy': 'registered'
    ]
    exclude group: 'org.slf4j'
    exclude group: 'org.jetbrains.kotlin'
}

