diff --git a/runtime/core/src/main/kotlin/mb/pie/runtime/core/BuildContext.kt b/runtime/core/src/main/kotlin/mb/pie/runtime/core/BuildContext.kt
index be87c81..aebf468 100644
--- a/runtime/core/src/main/kotlin/mb/pie/runtime/core/BuildContext.kt
+++ b/runtime/core/src/main/kotlin/mb/pie/runtime/core/BuildContext.kt
@@ -1,6 +1,7 @@
 package mb.pie.runtime.core
 
 import mb.vfs.path.PPath
+import mb.pie.runtime.core.impl.Req
 
 interface BuildContext {
   @Throws(BuildException::class)
@@ -14,7 +15,8 @@ interface BuildContext {
 
   @Throws(BuildException::class)
   fun <I : In, B : Builder<I, *>> requireBuild(clazz: Class<B>, input: I, stamper: OutputStamper = OutputStampers.inconsequential)
-
+  
+  fun require(req: Req)
   fun require(path: PPath, stamper: PathStamper = PathStampers.modified)
   fun generate(path: PPath, stamper: PathStamper = PathStampers.hash)
 }
diff --git a/runtime/core/src/main/kotlin/mb/pie/runtime/core/impl/BuildContext.kt b/runtime/core/src/main/kotlin/mb/pie/runtime/core/impl/BuildContext.kt
index 64749e1..b2da44a 100644
--- a/runtime/core/src/main/kotlin/mb/pie/runtime/core/impl/BuildContext.kt
+++ b/runtime/core/src/main/kotlin/mb/pie/runtime/core/impl/BuildContext.kt
@@ -60,6 +60,10 @@ internal class BuildContextImpl(
       requireBuild(generatedBy)
     }
   }
+  
+  override fun require(req: Req) {
+	reqs.add(req)
+  }
 
   override fun generate(path: PPath, stamper: PathStamper) {
     val stamp = stamper.stamp(path)
@@ -85,4 +89,4 @@ internal class BuildContextImpl(
   fun getReqsAndGens(): ReqsAndGens {
     return ReqsAndGens(reqs, gens)
   }
-}
\ No newline at end of file
+}
